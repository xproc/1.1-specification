<section xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:e="http://www.w3.org/1999/XSL/Spec/ElementSyntax"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xml:id="f.document-properties-document"
         version="5.0-extension w3c-xproc">
<title>Document properties document</title>

<para>This function retrieves the <glossterm>document properties</glossterm>
of a document as an XML document.</para>

<methodsynopsis>
<type>document-node()</type>
<methodname>p:document-properties-document</methodname>
<methodparam><type>item()</type><parameter>doc</parameter></methodparam>
</methodsynopsis>

<para>The document returned is a <tag>c:document-properties</tag>
document that contains (exclusively) the document properties
associated with the <parameter>doc</parameter> specified.
If the item is not associated with a document, the <tag>c:document-properties</tag>
element will be empty.</para>

<para>The underlying properties are serialized as follows:</para>

<itemizedlist>
<listitem>
<para>Each property/value pair in the map becomes an element in the
document. The property name is used as the name of the element and the
value becomes the element content.
</para>
</listitem>
<listitem>
<para>If the property value is a sequence, then the element is
repeated for each item in the sequence.
</para>
</listitem>
<listitem>
<para>If a map appears as a value, the property element will have an
attribute named <tag class="attribute">map</tag> with the value “<code>true</code>”.
<impl>It is <glossterm>implementation-defined</glossterm> how or if a
processor attempts to serialize maps that appear in document properties.</impl>
If the implementation does not serialize maps, the property element will be empty.
</para>
</listitem>
<listitem>
<para>If an array appears as a value, the property element will have an
attribute named <tag class="attribute">array</tag> with the value “<code>true</code>”.
<impl>It is <glossterm>implementation-defined</glossterm> how or if a
processor attempts to serialize arrays that appear in document properties.</impl>
If the implementation does not serialize arrays, the property element will be empty.
</para>
</listitem>
<listitem>
<para>For atomic values other than maps, arrays, and strings, an <tag
class="attribute">xsi:type</tag> attribute is added to the element to
identify the type of the value.
</para>
</listitem>
</itemizedlist>

<para>If any values in the properties map cannot be serialized, an empty string
is used for their value. Construction of the <tag>c:document-properties</tag> document
never fails.</para>

<para>The <function>p:document-properties-document</function> function behaves
normally during static analysis.</para>
</section>
