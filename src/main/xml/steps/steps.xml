<?xml version="1.0" encoding="UTF-8"?>
<specification xmlns="http://docbook.org/ns/docbook"
               xmlns:cs="http://www.w3.org/XML/XProc/2006/04/components#"
               xmlns:e="http://www.w3.org/1999/XSL/Spec/ElementSyntax"
               xmlns:p="http://www.w3.org/ns/xproc"
               xmlns:xi="http://www.w3.org/2001/XInclude"
               xmlns:xlink="http://www.w3.org/1999/xlink"
               class="ed"
               version="5.0-extension w3c-xproc">
<info>
<title>XProc 3.0: Standard Step Library</title>
<w3c-shortname>xproc30-steps</w3c-shortname>
<!-- defaults to date formatted <pubdate>2014-12-18</pubdate> -->

<bibliorelation type="isformatof" xlink:href="steps30.xml">XML</bibliorelation>
<authorgroup>
  <author>
    <personname>Achim Berndzen</personname>
  </author>
  <author>
    <personname>Gerrit Imsieke</personname>
  </author>
  <author>
    <personname>Norman Walsh</personname>
  </author>
</authorgroup>

<abstract>
  <para>This specification describes the standard step vocabulary of
  <citetitle>XProc 3.0: An XML Pipeline Language</citetitle>.</para>
</abstract>

<legalnotice role="status">

<para><emphasis>This section describes the status of this document at
the time of its publication. Other documents may supersede this
document.</emphasis></para>

<para>This document is derived from
<link xlink:href="https://www.w3.org/TR/2010/REC-xproc-20100511/">XProc:
An XML Pipeline Language</link> published by the W3C. See also
<xref linkend="credits"/>.</para>
</legalnotice>
</info>

<section xml:id="introduction">
  <title>Introduction</title>

<para>This specification describes the standard, atomic XProc steps.
<!-- FIXME:
A machine-readable description of
these steps may be found in
<link xlink:href="xproc-2.0.xpl">xproc-2.0.xpl</link>.
-->
</para>

<para>The types given for options should be understood as follows:</para>
<itemizedlist>
  <listitem>
    <para>Types in the XML Schema namespace, identified as QNames with the
    <code>xs:</code> prefix, as per the XML Schema specification with one
    exception. Anywhere an <code>xs:QName</code> is specified,
    an
    <link xlink:href="https://www.w3.org/TR/xquery-30/#doc-xquery30-EQName">EQName</link>
    is allowed.</para>
  </listitem>
  <listitem>
    <para><type>XPathExpression</type>:
    As a string per <biblioref linkend="xmlschema-2"/>, including
    whitespace normalization, and the further requirement to be a
    conformant Expression per <biblioref linkend="xpath31"/>.
    </para>
  </listitem>
  <listitem>
    <para><type>XSLTMatchPattern</type>: An XSLT pattern.
    </para>
  </listitem>
  <listitem>
    <para><type>XPathSequenceType</type>: An XPath
    <link xlink:href="https://www.w3.org/TR/xpath-31/#id-types">sequence type</link>.
    </para>
  </listitem>
  <listitem>
    <para><type>ContentType</type>: A media type as defined in
    <biblioref linkend="rfc2046"/>.
    </para>
  </listitem>
  <listitem>
    <para><type>ContentTypes</type>:
    As a whitespace separated list of media types as defined in
    <biblioref linkend="rfc2046"/>.
    </para>
  </listitem>
</itemizedlist>

<para>Option values are often expressed using <link
linkend="option-shortcut">the shortcut syntax</link>. In these cases,
the option shortcuts are generally treated as <link
linkend="value-templates">value templates</link>. However, for options
of type <code>map()</code> or <code>array()</code>, an expression is
<emphasis>required</emphasis> (there is no non-expression string which
can ever be a legal value for a map or array). Given that every value
entered this way will have to be a value template, and consequently
every curly brace contained within the expression will have to be
escaped, values of type map or array are defined to be expressions
directly.</para>

<para>Some aspects of documents are generally unchanged by steps:</para>

<itemizedlist>
<listitem>
<para>When a step in this library produces an output document,
the base URI of the output is the base URI of the step's primary
input document unless the step's process explicitly sets an
<tag class="attribute">xml:base</tag> attribute or the step's
description explicitly states how the base URI is constructed.</para>
</listitem>
<listitem>
<para>Each step describes how it modifies the
<glossterm>document properties</glossterm> of the documents
that flow through it.</para>
<para>A great many steps indicate that they preserve some or all of
the properties of the input document. It should be noted that in some
cases the transformation performed by the step will violate the
condition associated with some property. In general, the steps cannot
know this and the pipeline author is responsible for managing the
properties with greater care in this case.
</para>
</listitem>
</itemizedlist>

<para xml:id="cv.result">Also, in this specification, several steps use this
element for result information:</para>

<e:rng-pattern name="VocabResult"/>

<para>When a step uses an XPath to compute an option value, the XPath
context is as defined in
<olink targetdoc="../xproc20/xproc20.xml" targetptr="xpath-context"/>.</para>

<para>When a step specifies a particular version of a technology,
implementations <rfc2119>must</rfc2119> implement that
version or a subsequent version that is backwards compatible with that
version. At user-option, they may implement other non-backwards
compatible versions.</para>

<section xml:id="common-options">
<title>Common options</title>
<para>All XProc steps <rfc2119>must</rfc2119> accept the option 
<option>p:terminate-after</option>. As a debugging tool this option can be used 
to tell the XProc processor that a step with such an option should be terminated 
if its execution does take more time than expected. The value of the 
<option>p:terminate-after</option> option must be a <type>xs:positiveInteger</type>. 
It is interpreted as the maximal number of seconds the step is expected to run. The 
measurement of time starts after all bindings for input ports and all options are evaluated. 
If the XProc processor realizes a longer runtime, it should terminate the execution of the step 
as soon as possible, do cleanup to ensure proper execution of other steps in 
the pipeline and then raise a dynamic error.</para>

<para><error code="D0053">It is a <glossterm>dynamic error</glossterm> if a step runs 
longer than its terminate-after value.</error> <impl>It is
<glossterm>implementation-defined</glossterm> whether a processor supports
timeouts, and if it does, how precisely and precisely how the
execution time of a step is measured.</impl>
</para>

<note>
<title>Note</title>
<para>Note that the name of this option is <option>p:terminate-after</option>
even on steps in the XProc namespace. This limits the extent to which the
option restricts the space of available option names for steps.
(If the option name wasn’t in a namespace, then no step could have an option
named “<literal>terminate-after</literal>” which seems unreasonable.)
</para>
</note>
</section>

<section xml:id="std-required">
<title>Required Steps</title>

<para>This section describes standard steps that must be supported
by any conforming processor.</para>

<xi:include href="steps/add-attribute.xml"/>
<xi:include href="steps/add-xml-base.xml"/>
<xi:include href="steps/cast-content-type.xml"/>
<xi:include href="steps/compare.xml"/>
<xi:include href="steps/count.xml"/>
<xi:include href="steps/delete.xml"/>
<xi:include href="steps/directory-list.xml"/>
<xi:include href="steps/error.xml"/>
<xi:include href="steps/escape-markup.xml"/>
<xi:include href="steps/filter.xml"/>
<xi:include href="steps/http-request.xml"/>
<xi:include href="steps/identity.xml"/>
<xi:include href="steps/insert.xml"/>
<xi:include href="steps/label-elements.xml"/>
<xi:include href="steps/load.xml"/>
<xi:include href="steps/make-absolute-uris.xml"/>
<xi:include href="steps/namespace-rename.xml"/>
<xi:include href="steps/pack.xml"/>
<xi:include href="steps/parameters.xml"/>
<xi:include href="steps/rename.xml"/>
<xi:include href="steps/replace.xml"/>
<xi:include href="steps/set-attributes.xml"/>
<xi:include href="steps/set-properties.xml"/>
<xi:include href="steps/sink.xml"/>
<xi:include href="steps/split-sequence.xml"/>
<xi:include href="steps/store.xml"/>
<xi:include href="steps/string-replace.xml"/>
<xi:include href="steps/unescape-markup.xml"/>
<xi:include href="steps/unwrap.xml"/>
<xi:include href="steps/wrap.xml"/>
<xi:include href="steps/wrap-sequence.xml"/>
<xi:include href="steps/xinclude.xml"/>
<xi:include href="steps/xslt.xml"/>
</section>

<section xml:id="std-optional">
<title>Optional Steps</title>

<para>The following steps are optional. If they are supported by a
processor, they must conform to the semantics outlined here, but a
conformant processor is not required to support all (or any) of these
steps.</para>

<xi:include href="steps/exec.xml"/>
<xi:include href="steps/hash.xml"/>
<xi:include href="steps/in-scope-names.xml"/>
<xi:include href="steps/template.xml"/>
<xi:include href="steps/uuid.xml"/>
<xi:include href="steps/validate-with-relax-ng.xml"/>
<xi:include href="steps/validate-with-schematron.xml"/>
<xi:include href="steps/validate-with-xml-schema.xml"/>
<xi:include href="steps/www-form-urldecode.xml"/>
<xi:include href="steps/www-form-urlencode.xml"/>
<xi:include href="steps/xquery.xml"/>
<xi:include href="steps/xsl-formatter.xml"/>
</section>
</section>

<xi:include href="errors.xml"/>
<xi:include href="error-codes.xml"/>

<appendix xml:id="credits">
<title>Credits</title>

<para>This document is derived from
<link xlink:href="https://www.w3.org/TR/2010/REC-xproc-20100511/">XProc:
An XML Pipeline Language</link> published by the W3C. It was developed
by the <citetitle>XML Processing Model Working Group</citetitle> and edited by
Norman Walsh, Alex Miłowski, and Henry Thompson.</para>

<para>The editors of this specification extend their gratitude to everyone
who contributed to this document and all of the versions that came before it.</para>
</appendix>

<xi:include href="glob.xml"/>
<xi:include href="references.xml"/>
</specification>
